<Application x:Class="WpfGram.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfGram" xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:utils ="clr-namespace:WpfGram.Utils"
             xmlns:controls="clr-namespace:WpfGram.Controls"
             Startup="OnStartup">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary Theme="Dark" />
                <ResourceDictionary Source="pack://application:,,,/WpfGram;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/WpfGram;component/Themes/DataTemplates.xaml" />
                <ui:ControlsDictionary  />
                <!--<ResourceDictionary Source="pack://application:,,,/Wpf.Ui;component/Styles/Assets/Palette.xaml" />-->

            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="controls:PhoneTextBox"
                    BasedOn="{StaticResource DefaultTextBoxStyle}" />

            <Style x:Key="ButtonWithRing" TargetType="{x:Type ui:Button}">
                <!--  Universal WPF UI focus  -->
                <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
                <!--  Universal WPF UI focus  -->
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="MouseOverBackground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource ControlFillColorSecondary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="PressedBackground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource ControlFillColorTertiary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="PressedForeground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource TextFillColorSecondary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
                <Setter Property="PressedBorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                <Setter Property="MouseOverBorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
                <Setter Property="BorderThickness" Value="{StaticResource ButtonBorderThemeThickness}" />
                <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
                <Setter Property="Appearance" Value="Secondary" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ui:Button}">
                            <Border
                        x:Name="ContentBorder"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                                <Border
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                                    <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <ui:SymbolIcon
                                    x:Name="ControlIcon"
                                    Grid.Column="0"
                                    Margin="{StaticResource ButtonIconMargin}"
                                    VerticalAlignment="Center"
                                    Focusable="False"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Symbol="{TemplateBinding Icon}" />

                                        <ContentPresenter
                                    x:Name="ContentPresenter"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    TextElement.Foreground="{TemplateBinding Foreground}" />
                                        <Viewbox Stretch="Uniform" Grid.Column="1" >
                                            <Grid>
                                                <ui:ProgressRing HorizontalAlignment="Center" Foreground="White"  x:Name="Ring" Visibility="Collapsed" 
                                                             Progress="{Binding RelativeSource={RelativeSource AncestorType=ui:Button},Path=(utils:ButtonsAssist.ProgressValue)}" 
                                                             VerticalAlignment="Center" Margin="0" 
                                                             IsIndeterminate="{Binding RelativeSource={RelativeSource AncestorType=ui:Button},Path=(utils:ButtonsAssist.IsIndeterminate)}"/>
                                                <Path x:Name="StopIcon" HorizontalAlignment="Center" Visibility="Collapsed"  Margin="-3,-1,0,0" VerticalAlignment="Center" Data="M4.75 3C3.7835 3 3 3.7835 3 4.75V19.25C3 20.2165 3.7835 21 4.75 21H19.25C20.2165 21 21 20.2165 21 19.25V4.75C21 3.7835 20.2165 3 19.25 3H4.75Z" Fill="White"/>
                                            </Grid>
                                        </Viewbox>
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger  Property="utils:ButtonsAssist.IsBusy" Value="True">
                                    <Setter TargetName="ContentPresenter" Property="Visibility"  Value="Collapsed" />
                                    <Setter TargetName="Ring" Property="Visibility"  Value="Visible" />
                                    <Setter TargetName="StopIcon" Property="Visibility"  Value="Visible" />
                                </Trigger>
                                <Trigger  Property="utils:ButtonsAssist.ProgressValue" Value="0">
                                    <Setter TargetName="Ring" Property="IsIndeterminate"  Value="true" />
                                    <Setter TargetName="StopIcon" Property="Visibility"  Value="Collapsed" />
                                </Trigger>
                                <!--<Trigger Property="Appearance" Value="Primary">
                                    <Setter TargetName="Ring" Property="Foreground" Value="{DynamicResource  PalleteCyanBrush}"/>
                                    <Setter TargetName="Ring" Property="Background" Value="{DynamicResource  PalleteCyanBrush}"/>
                                </Trigger>-->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsPressed" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentBorder" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsPressed" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentBorder" Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="ControlIcon" Property="TextElement.Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
                                    <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                                    <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                                </Trigger>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter TargetName="ControlIcon" Property="Margin" Value="0" />
                                </Trigger>
                                <Trigger Property="Content" Value="">
                                    <Setter TargetName="ControlIcon" Property="Margin" Value="0" />
                                </Trigger>
                                <Trigger Property="Icon" Value="Empty">
                                    <Setter TargetName="ControlIcon" Property="Margin" Value="0" />
                                    <Setter TargetName="ControlIcon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!--  TRANSPARENT  -->
                    <Trigger Property="Appearance" Value="Transparent">
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>

                    <!--  PRIMARY  -->
                    <Trigger Property="Appearance" Value="Primary">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="MouseOverBackground">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.9" Color="{DynamicResource SystemAccentColorSecondary}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="PressedBackground">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.7" Color="{DynamicResource SystemAccentColorSecondary}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextOnAccentFillColorPrimary}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="PressedForeground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextOnAccentFillColorSecondary}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <!--  DARK  -->
                    <Trigger Property="Appearance" Value="Dark">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource ControlStrongFillColorDark}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="MouseOverBackground">
                            <Setter.Value>
                                <SolidColorBrush Color="#62000000" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="PressedBackground">
                            <Setter.Value>
                                <SolidColorBrush Color="#52000000" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextFillColorLightPrimary}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="PressedForeground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextFillColorLightSecondary}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <!--  LIGHT  -->
                    <Trigger Property="Appearance" Value="Light">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource ControlStrongFillColorLight}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="MouseOverBackground">
                            <Setter.Value>
                                <SolidColorBrush Color="#D3FFFFFF" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="PressedBackground">
                            <Setter.Value>
                                <SolidColorBrush Color="#F3FFFFFF" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextFillColorDarkPrimary}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="PressedForeground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextFillColorDarkSecondary}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <!--  INFO  -->
                    <Trigger Property="Appearance" Value="Info">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource PaletteLightBlueColor}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="MouseOverBackground">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.9" Color="{DynamicResource PaletteLightBlueColor}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="PressedBackground">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.7" Color="{DynamicResource PaletteLightBlueColor}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextFillColorLightPrimary}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <!--  DANGER  -->
                    <Trigger Property="Appearance" Value="Danger">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource PaletteRedColor}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="MouseOverBackground">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.9" Color="{DynamicResource PaletteRedColor}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="PressedBackground">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.7" Color="{DynamicResource PaletteRedColor}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <!--  SUCCESS  -->
                    <Trigger Property="Appearance" Value="Success">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource PaletteGreenColor}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="MouseOverBackground">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.9" Color="{DynamicResource PaletteGreenColor}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="PressedBackground">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.7" Color="{DynamicResource PaletteGreenColor}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <!--  CAUTION  -->
                    <Trigger Property="Appearance" Value="Caution">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource PaletteOrangeColor}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="MouseOverBackground">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.9" Color="{DynamicResource PaletteOrangeColor}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="PressedBackground">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.7" Color="{DynamicResource PaletteOrangeColor}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
